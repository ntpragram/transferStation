<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ch.dao.master.StopsOutBoundMapper">



  <resultMap id="BaseResultMap" type="com.ch.dataobject.master.StopsOutBound">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 20 16:39:04 CST 2019.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="inputSerialNumber" jdbcType="VARCHAR" property="inputserialnumber" />
    <result column="institute" jdbcType="VARCHAR" property="institute" />
    <result column="inputowner" jdbcType="VARCHAR" property="inputowner" />
    <result column="inputTime" jdbcType="TIMESTAMP" property="inputtime" />
    <result column="licensePlateNumber" jdbcType="VARCHAR" property="licenseplatenumber" />
    <result column="ifWeighting" jdbcType="INTEGER" property="ifweighting" />
    <result column="ifWaitWeight" jdbcType="INTEGER" property="ifwaitweight" />
    <result column="ifBerth" jdbcType="INTEGER" property="ifberth" />
    <result column="totalWeight" jdbcType="DOUBLE" property="totalweight" />
    <result column="vehicleWeight" jdbcType="DOUBLE" property="vehicleweight" />
    <result column="cargoWeight" jdbcType="DOUBLE" property="cargoweight" />
    <result column="berthNumber" jdbcType="INTEGER" property="berthnumber" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="information" jdbcType="VARCHAR" property="information" />
    <result column="isdel" jdbcType="INTEGER" property="isdel" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>

  <sql id="Base_Column_List">
    id, inputSerialNumber, institute, inputowner, inputTime, licensePlateNumber, ifWeighting, 
    ifWaitWeight, ifBerth, totalWeight, vehicleWeight, cargoWeight, berthNumber, status, 
    information, isdel, createTime
  </sql>
  <select id="getStopsOutBoundList" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stops_outbound where isdel=0 order  by id desc limit 0,20
  </select>

  <select id="getAllWeightForByCarNumber" resultType="java.lang.Integer">
    select  COALESCE(SUM(cargoWeight),0) from stops_outbound where isdel=0 and licensePlateNumber=#{param1}
  </select>

  <select id="getTrainNumber" resultType="java.lang.Integer">
    select count(*)  from stops_outbound where isdel=0 and licensePlateNumber=#{param1}
  </select>

    <select id="getDailyStatistical" resultType="com.ch.dataobject.master.Statistical">
        select HOUR(so.inputtime) as xdate,sum(cargoWeight) as garbageWeight,count(*) as quantity from stops_outbound so
            where to_days(so.inputtime) = to_days(now()) group by HOUR(so.inputtime) order by Hour(so.inputtime)
    </select>

    <select id="getMonthStatistical" resultType="com.ch.dataobject.master.Statistical">
        select DATE(so.inputtime) as xdate,sum(cargoWeight) as garbageWeight,count(*) as quantity from stops_outbound
            as so where date_format(so.inputtime,'%Y%m')=date_format(curdate(),'%Y%m') GROUP BY DATE(so.inputtime) ORDER BY so.inputtime
    </select>

    <select id="getYearStatistical" resultType="com.ch.dataobject.master.Statistical">
        select MONTH(so.inputtime) as xdate,sum(cargoWeight) as garbageWeight,count(*) as quantity from stops_outbound as so
            where YEAR(so.inputtime)=YEAR(NOW()) group by MONTH(so.inputtime)
    </select>

  <select id="getOutBoundList"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from stops_outbound where isdel=0
    <if test= "startTime !=null and startTime !=''">
      and inputTime &gt;= #{startTime}
    </if>
    <if test="endTime !=null and endTime!=''">
      and inputTime &lt;= #{endTime}
    </if>
    <if test="carNumber !=null and carNumber!=''">
      and licensePlateNumber  LIKE concat('%',#{carNumber},'%')
    </if>
    order by id desc limit #{page},10
  </select>


    <select id="getExportOutBoundList"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from stops_outbound where isdel=0
        <if test= "startTime !=null and startTime !=''">
            and inputTime &gt;= #{startTime}
        </if>
        <if test="endTime !=null and endTime!=''">
            and inputTime &lt;= #{endTime}
        </if>
        <if test="carNumber !=null and carNumber!=''">
            and licensePlateNumber  LIKE concat('%',#{carNumber},'%')
        </if>
        order by inputTime desc
    </select>


  <select id="getOutBoundListCount" resultType="java.lang.Integer">
    select count(*)  from stops_outbound where isdel=0
    <if test= "startTime !=null and startTime !=''">
      and inputTime &gt;= #{startTime}
    </if>
    <if test="endTime !=null and endTime!=''">
      and inputTime &lt;= #{endTime}
    </if>
    <if test="carNumber !=null and carNumber!=''">
      and licensePlateNumber  LIKE concat('%',#{carNumber},'%')
    </if>

  </select>


  <update id="deleteOutBound" parameterType="com.ch.dataobject.master.StopsOutBound">
    update stops_outbound set isdel=1  where id = #{param1}
  </update>


  <insert id="insertStopsOutBound" parameterType="com.ch.dataobject.master.StopsOutBound"  useGeneratedKeys="true" keyProperty="id">
        insert into stops_outbound(institute,inputtime,licensePlateNumber,
        ifWeighting,ifWaitWeight,ifBerth,totalWeight,vehicleWeight,
        cargoWeight,status,berthNumber,information )

        values(#{institute},#{inputtime},#{licenseplatenumber},
        #{ifweighting},#{ifwaitweight},#{ifberth},#{totalweight},#{vehicleweight},
        #{cargoweight},#{status},#{berthnumber},#{information})
    </insert>

  <select id="getStopsOutBoundListNew"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from stops_outbound where isdel=0 order by id desc limit 0,7
  </select>


  <select id="findNewSOB"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from stops_outbound where isdel=0 and status=-1 order by id desc limit 1
  </select>


  <update id="updateBerthAndStatus" parameterType="com.ch.dataobject.master.StopsOutBound">
    update stops_outbound set status=1,berthNumber= #{berthId},information=#{msg} where id = #{sid}
  </update>



  <select id="findStopById"  resultType="java.lang.Integer"  resultMap="BaseResultMap">
    select
    id, inputSerialNumber, institute, inputowner, inputTime, licensePlateNumber, ifWeighting,
    ifWaitWeight, ifBerth, totalWeight, vehicleWeight, cargoWeight, berthNumber, status,
    information, isdel, createTime

    from stops_outbound where id= #{obId}
  </select>

  <update id="updateNewBerthStatus" parameterType="com.ch.dataobject.master.StopsOutBound">
    update stops_outbound set berthNumber= #{berthId} where id = #{obId}
  </update>


</mapper>