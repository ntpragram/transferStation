package com.ch.dao.master;

import com.ch.dataobject.master.Statistical;
import com.ch.dataobject.master.StopsOutBound;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
public interface StopsOutBoundMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stops_outbound
     *
     * @mbg.generated Wed Nov 20 16:39:04 CST 2019
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stops_outbound
     *
     * @mbg.generated Wed Nov 20 16:39:04 CST 2019
     */
    int insert(StopsOutBound record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stops_outbound
     *
     * @mbg.generated Wed Nov 20 16:39:04 CST 2019
     */
    int insertSelective(StopsOutBound record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stops_outbound
     *
     * @mbg.generated Wed Nov 20 16:39:04 CST 2019
     */
    StopsOutBound selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stops_outbound
     *
     * @mbg.generated Wed Nov 20 16:39:04 CST 2019
     */
    int updateByPrimaryKeySelective(StopsOutBound record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stops_outbound
     *
     * @mbg.generated Wed Nov 20 16:39:04 CST 2019
     */
    int updateByPrimaryKey(StopsOutBound record);

    List<StopsOutBound> getStopsOutBoundList();

    int getAllWeightForByCarNumber(String licenseplatenumber);

    int getTrainNumber(String licenseplatenumber);

    List<Statistical> getDailyStatistical();

    List<Statistical> getMonthStatistical();

    List<Statistical> getYearStatistical();

    List<StopsOutBound> getOutBoundList(@Param("page")int page, @Param("startTime")String startTime ,
                                        @Param("endTime")String endTime, @Param("carNumber")String carNumber);

    List<StopsOutBound> getExportOutBoundList(@Param("startTime")String startTime, @Param("endTime")String endTime,@Param("carNumber")String carNumber);

    int getOutBoundListCount(@Param("page")int page, @Param("startTime")String startTime ,
                             @Param("endTime")String endTime, @Param("carNumber")String carNumber);

    boolean deleteOutBound(Integer obId);

    boolean insertStopsOutBound(StopsOutBound stopsOutBound);

    List<StopsOutBound> getStopsOutBoundListNew();


    StopsOutBound findNewSOB();

    boolean updateBerthAndStatus(@Param("sid") Integer sid, @Param("berthId") Integer berthId,@Param("msg") String msg);

    StopsOutBound findStopById( @Param("obId") int obId);

    boolean updateNewBerthStatus(@Param("obId") int obId, @Param("berthId") int berthId);
}